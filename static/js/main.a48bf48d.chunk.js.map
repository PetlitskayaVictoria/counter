{"version":3,"sources":["components/Counter/Counter.module.css","components/Buttons/ButtonElement/ButtonElement.module.css","components/Buttons/Buttons.module.css","components/Counter/Counter.tsx","components/Buttons/ButtonElement/ButtonElement.tsx","components/Buttons/Buttons.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Counter","props","className","classes","counterContainer","counterValue","red","ButtonElement","buttonContainer","buttonStyle","disabled","onClick","onClickCallBack","title","Buttons","buttonsContainer","inc","reset","App","useState","setCounterValue","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0FACAA,EAAOC,QAAU,CAAC,iBAAmB,kCAAkC,IAAM,uB,gBCA7ED,EAAOC,QAAU,CAAC,YAAc,mCAAmC,gBAAkB,yC,iBCArFD,EAAOC,QAAU,CAAC,iBAAmB,oC,gKCgBtBC,MAVf,SAAiBC,GACf,OACE,qBAAKC,UAAWC,IAAQC,iBAAxB,SACE,8BACM,uBAAMF,UAAoC,IAAvBD,EAAMI,aAAsBF,IAAQG,IAAM,GAA7D,cAAoEL,EAAMI,aAA1E,Y,gCCFL,SAASE,EAAcN,GAE1B,OACI,qBAAKC,UAAWC,IAAQK,gBAAxB,SACI,yBAAQN,UAAWC,IAAQM,YACnBC,SAAUT,EAAMS,SAChBC,QAASV,EAAMW,gBAFvB,cAE0CX,EAAMY,MAFhD,SCOGC,MAVf,SAAiBb,GAEf,OACE,sBAAKC,UAAWC,IAAQY,iBAAxB,UACM,cAACR,EAAD,CAAeM,MAAO,MAAOH,SAAiC,IAAvBT,EAAMI,aAAoBO,gBAAiBX,EAAMe,MACxF,cAACT,EAAD,CAAeM,MAAO,QAASH,SAAiC,IAAvBT,EAAMI,aAAoBO,gBAAiBX,EAAMgB,YCarFC,MAtBf,WAAgB,IAAD,EAE2BC,mBAAiB,GAF5C,mBAENd,EAFM,KAEQe,EAFR,KAYX,OACI,qBAAKlB,UAAU,MAAf,SACI,sBAAKA,UAAU,YAAf,UACI,cAAC,EAAD,CAASG,aAAcA,IACvB,cAAC,EAAD,CAASW,IAZT,WACJI,EAAgBf,EAAe,IAWRY,MATjB,WACVG,EAAgB,IAQyBf,aAAcA,UCRhDgB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a48bf48d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"counterContainer\":\"Counter_counterContainer__1qHAn\",\"red\":\"Counter_red__2Fb8k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonStyle\":\"ButtonElement_buttonStyle__kzh7H\",\"buttonContainer\":\"ButtonElement_buttonContainer__2rDxr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonsContainer\":\"Buttons_buttonsContainer__3-PAx\"};","import React from 'react';\nimport classes from './Counter.module.css'\n\ntype CounterType = {\n    counterValue: number\n}\n\nfunction Counter(props: CounterType) {\n  return (\n    <div className={classes.counterContainer}>\n      <div>\n            <span className={((props.counterValue === 5) ? classes.red : \"\")}> {props.counterValue} </span>\n      </div>\n    </div>\n  );\n}\n\nexport default Counter;\n","import React from 'react';\nimport classes from './ButtonElement.module.css'\n\ntype ButtonsType = {\n    title: string\n    disabled: boolean\n    onClickCallBack: () => void\n}\n\nexport function ButtonElement(props: ButtonsType) {\n\n    return (\n        <div className={classes.buttonContainer}>\n            <button className={classes.buttonStyle}\n                    disabled={props.disabled}\n                    onClick={props.onClickCallBack}> {props.title} </button>\n        </div>\n    );\n}\n\n","import React from 'react';\nimport classes from './Buttons.module.css'\nimport {ButtonElement} from \"./ButtonElement/ButtonElement\";\n\ntype ButtonsType = {\n    inc: () => void\n    reset: () => void\n    counterValue: number\n}\n\nfunction Buttons(props: ButtonsType) {\n\n  return (\n    <div className={classes.buttonsContainer}>\n          <ButtonElement title={\"inc\"} disabled={props.counterValue === 5} onClickCallBack={props.inc} />\n          <ButtonElement title={\"reset\"} disabled={props.counterValue === 0} onClickCallBack={props.reset}/>\n    </div>\n  );\n}\n\nexport default Buttons;\n","import React, {useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Counter from './components/Counter/Counter';\nimport Buttons from \"./components/Buttons/Buttons\";\n\nfunction App() {\n\n    let [counterValue, setCounterValue] = useState<number>(0)\n\n    const inc = () => {\n            setCounterValue(counterValue + 1)\n    }\n    const reset = () => {\n        setCounterValue(0)\n    }\n\n\n    return (\n        <div className=\"App\">\n            <div className=\"container\">\n                <Counter counterValue={counterValue}/>\n                <Buttons inc={inc} reset={reset} counterValue={counterValue}/>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}